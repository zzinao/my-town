{"ast":null,"code":"import _defineProperty from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";var _handleActions;import{createAction,handleActions}from'redux-actions';import produce from'immer';import{getStorage,ref,uploadBytes,getDownloadURL}from'firebase/storage';//action\nvar UPLOADING='UPLOADING';var UPLOAD_IMAGE='UPLOAD_IMAGE';var SET_PREVIEW='SET_PREVIEW';var uploading=createAction(UPLOADING,function(uploading){return{uploading:uploading};});var uploadImage=createAction(UPLOAD_IMAGE,function(image_url){return{image_url:image_url};});var setPreview=createAction(SET_PREVIEW,function(preview){return{preview:preview};});var initialState={image_url:'',uploading:false,preview:null};var uploadImageFB=function uploadImageFB(image){return function(dispatch,getState,_ref){var history=_ref.history;dispatch(uploading(true));var storage=getStorage();var _upload=ref(storage,\"images/\".concat(image.name));//업로드\nuploadBytes(_upload,image).then(function(snapshot){console.log('Uploaded...!');//url 링크 얻기\ngetDownloadURL(_upload).then(function(url){dispatch(uploadImage(url));console.log(url);});});};};export default handleActions((_handleActions={},_defineProperty(_handleActions,UPLOAD_IMAGE,function(state,action){return produce(state,function(draft){draft.image_url=action.payload.image_url;draft.uploading=false;});}),_defineProperty(_handleActions,UPLOADING,function(state,action){return produce(state,function(draft){draft.uploading=action.payload.uploading;});}),_defineProperty(_handleActions,SET_PREVIEW,function(state,action){return produce(state,function(draft){draft.preview=action.payload.preview;});}),_handleActions),initialState);var actionCreators={uploadImage:uploadImage,uploadImageFB:uploadImageFB,setPreview:setPreview};export{actionCreators};","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/redux/modules/image.js"],"names":["createAction","handleActions","produce","getStorage","ref","uploadBytes","getDownloadURL","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","initialState","uploadImageFB","image","dispatch","getState","history","storage","_upload","name","then","snapshot","console","log","url","state","action","draft","payload","actionCreators"],"mappings":"iMAAA,OAASA,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CACA,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,WAA1B,CAAuCC,cAAvC,KAA6D,kBAA7D,CAEA;AAEA,GAAMC,CAAAA,SAAS,CAAG,WAAlB,CACA,GAAMC,CAAAA,YAAY,CAAG,cAArB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CAEA,GAAMC,CAAAA,SAAS,CAAGV,YAAY,CAACO,SAAD,CAAY,SAACG,SAAD,QAAgB,CAAEA,SAAS,CAATA,SAAF,CAAhB,EAAZ,CAA9B,CACA,GAAMC,CAAAA,WAAW,CAAGX,YAAY,CAACQ,YAAD,CAAe,SAACI,SAAD,QAAgB,CAAEA,SAAS,CAATA,SAAF,CAAhB,EAAf,CAAhC,CAEA,GAAMC,CAAAA,UAAU,CAAGb,YAAY,CAACS,WAAD,CAAc,SAACK,OAAD,QAAc,CAAEA,OAAO,CAAPA,OAAF,CAAd,EAAd,CAA/B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBH,SAAS,CAAE,EADQ,CAEnBF,SAAS,CAAE,KAFQ,CAGnBI,OAAO,CAAE,IAHU,CAArB,CAMA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,MAAO,UAAUC,QAAV,CAAoBC,QAApB,MAA2C,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAChDF,QAAQ,CAACR,SAAS,CAAC,IAAD,CAAV,CAAR,CAEA,GAAMW,CAAAA,OAAO,CAAGlB,UAAU,EAA1B,CACA,GAAMmB,CAAAA,OAAO,CAAGlB,GAAG,CAACiB,OAAD,kBAAoBJ,KAAK,CAACM,IAA1B,EAAnB,CAEA;AACAlB,WAAW,CAACiB,OAAD,CAAUL,KAAV,CAAX,CAA4BO,IAA5B,CAAiC,SAACC,QAAD,CAAc,CAC7CC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAEA;AACArB,cAAc,CAACgB,OAAD,CAAd,CAAwBE,IAAxB,CAA6B,SAACI,GAAD,CAAS,CACpCV,QAAQ,CAACP,WAAW,CAACiB,GAAD,CAAZ,CAAR,CACAF,OAAO,CAACC,GAAR,CAAYC,GAAZ,EACD,CAHD,EAID,CARD,EASD,CAhBD,CAiBD,CAlBD,CAoBA,cAAe3B,CAAAA,aAAa,mDAEvBO,YAFuB,CAER,SAACqB,KAAD,CAAQC,MAAR,QACd5B,CAAAA,OAAO,CAAC2B,KAAD,CAAQ,SAACE,KAAD,CAAW,CACxBA,KAAK,CAACnB,SAAN,CAAkBkB,MAAM,CAACE,OAAP,CAAepB,SAAjC,CACAmB,KAAK,CAACrB,SAAN,CAAkB,KAAlB,CACD,CAHM,CADO,EAFQ,iCAQvBH,SARuB,CAQX,SAACsB,KAAD,CAAQC,MAAR,QACX5B,CAAAA,OAAO,CAAC2B,KAAD,CAAQ,SAACE,KAAD,CAAW,CACxBA,KAAK,CAACrB,SAAN,CAAkBoB,MAAM,CAACE,OAAP,CAAetB,SAAjC,CACD,CAFM,CADI,EARW,iCAavBD,WAbuB,CAaT,SAACoB,KAAD,CAAQC,MAAR,QACb5B,CAAAA,OAAO,CAAC2B,KAAD,CAAQ,SAACE,KAAD,CAAW,CACxBA,KAAK,CAACjB,OAAN,CAAgBgB,MAAM,CAACE,OAAP,CAAelB,OAA/B,CACD,CAFM,CADM,EAbS,kBAkB1BC,YAlB0B,CAA5B,CAqBA,GAAMkB,CAAAA,cAAc,CAAG,CACrBtB,WAAW,CAAXA,WADqB,CAErBK,aAAa,CAAbA,aAFqB,CAGrBH,UAAU,CAAVA,UAHqB,CAAvB,CAMA,OAASoB,cAAT","sourcesContent":["import { createAction, handleActions } from 'redux-actions'\nimport produce from 'immer'\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage'\n\n//action\n\nconst UPLOADING = 'UPLOADING'\nconst UPLOAD_IMAGE = 'UPLOAD_IMAGE'\nconst SET_PREVIEW = 'SET_PREVIEW'\n\nconst uploading = createAction(UPLOADING, (uploading) => ({ uploading }))\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({ image_url }))\n\nconst setPreview = createAction(SET_PREVIEW, (preview) => ({ preview }))\n\nconst initialState = {\n  image_url: '',\n  uploading: false,\n  preview: null,\n}\n\nconst uploadImageFB = (image) => {\n  return function (dispatch, getState, { history }) {\n    dispatch(uploading(true))\n\n    const storage = getStorage()\n    const _upload = ref(storage, `images/${image.name}`)\n\n    //업로드\n    uploadBytes(_upload, image).then((snapshot) => {\n      console.log('Uploaded...!')\n\n      //url 링크 얻기\n      getDownloadURL(_upload).then((url) => {\n        dispatch(uploadImage(url))\n        console.log(url)\n      })\n    })\n  }\n}\n\nexport default handleActions(\n  {\n    [UPLOAD_IMAGE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.image_url = action.payload.image_url\n        draft.uploading = false\n      }),\n\n    [UPLOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.uploading = action.payload.uploading\n      }),\n\n    [SET_PREVIEW]: (state, action) =>\n      produce(state, (draft) => {\n        draft.preview = action.payload.preview\n      }),\n  },\n  initialState,\n)\n\nconst actionCreators = {\n  uploadImage,\n  uploadImageFB,\n  setPreview,\n}\n\nexport { actionCreators }\n"]},"metadata":{},"sourceType":"module"}