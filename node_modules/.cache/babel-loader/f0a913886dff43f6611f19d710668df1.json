{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';import{createBrowserHistory}from'history';import{connectRouter}from'connected-react-router';import User from'./modules/User';import Post from'./modules/post';import Image from'./modules/image';import Comment from'./modules/comments';export var history=createBrowserHistory();var rootReducer=combineReducers({user:User,post:Post,image:Image,comment:Comment,router:connectRouter(history)});//미들웨어 ㅗ\nvar middlewares=[thunk.withExtraArgument({history:history})];// 지금이 어느 환경인지 알려준다. (개발 환경, 프로덕션(배포)환경...)\nvar env=process.env.NODE_ENV;// 개발환경에서는 로거라는 걸 하나만 더 써볼게요\nif(env==='development'){//env가 개발 환경일 때\nvar _require=require('redux-logger'),logger=_require.logger;//require = import logger를 가지고 와\nmiddlewares.push(logger);}//redux devTools\nvar composeEnhancers=typeof window==='object'&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}):compose;//미들웨어 묶기\nvar enhancer=composeEnhancers(applyMiddleware.apply(void 0,middlewares));//스토어 만들기\nvar store=function store(initialStore){return createStore(rootReducer,enhancer);};export default store();","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","User","Post","Image","Comment","history","rootReducer","user","post","image","comment","router","middlewares","withExtraArgument","env","process","NODE_ENV","require","logger","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGN,oBAAoB,EAApC,CAEP,GAAMO,CAAAA,WAAW,CAAGX,eAAe,CAAC,CAClCY,IAAI,CAAEN,IAD4B,CAElCO,IAAI,CAAEN,IAF4B,CAGlCO,KAAK,CAAEN,KAH2B,CAIlCO,OAAO,CAAEN,OAJyB,CAKlCO,MAAM,CAAEX,aAAa,CAACK,OAAD,CALa,CAAD,CAAnC,CAQA;AAEA,GAAMO,CAAAA,WAAW,CAAG,CAACd,KAAK,CAACe,iBAAN,CAAwB,CAAER,OAAO,CAAEA,OAAX,CAAxB,CAAD,CAApB,CAEA;AACA,GAAMS,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB,CAEA;AACA,GAAIF,GAAG,GAAK,aAAZ,CAA2B,CACzB;AACA,aAAmBG,OAAO,CAAC,cAAD,CAA1B,CAAQC,MAAR,UAAQA,MAAR,CAA2C;AAC3CN,WAAW,CAACO,IAAZ,CAAiBD,MAAjB,EACD,CAED;AAEA,GAAME,CAAAA,gBAAgB,CACpB,MAAOC,CAAAA,MAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACC,oCAArC,CACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,CAIIzB,OALN,CAOA;AACA,GAAM0B,CAAAA,QAAQ,CAAGH,gBAAgB,CAACxB,eAAe,MAAf,QAAmBgB,WAAnB,CAAD,CAAjC,CAEA;AACA,GAAIY,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,YAAD,QAAkB/B,CAAAA,WAAW,CAACY,WAAD,CAAciB,QAAd,CAA7B,EAAZ,CAEA,cAAeC,CAAAA,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createBrowserHistory } from 'history'\nimport { connectRouter } from 'connected-react-router'\n\nimport User from './modules/User'\nimport Post from './modules/post'\nimport Image from './modules/image'\nimport Comment from './modules/comments'\n\nexport const history = createBrowserHistory()\n\nconst rootReducer = combineReducers({\n  user: User,\n  post: Post,\n  image: Image,\n  comment: Comment,\n  router: connectRouter(history),\n})\n\n//미들웨어 ㅗ\n\nconst middlewares = [thunk.withExtraArgument({ history: history })]\n\n// 지금이 어느 환경인지 알려준다. (개발 환경, 프로덕션(배포)환경...)\nconst env = process.env.NODE_ENV\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요\nif (env === 'development') {\n  //env가 개발 환경일 때\n  const { logger } = require('redux-logger') //require = import logger를 가지고 와\n  middlewares.push(logger)\n}\n\n//redux devTools\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose\n\n//미들웨어 묶기\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares))\n\n//스토어 만들기\nlet store = (initialStore) => createStore(rootReducer, enhancer)\n\nexport default store()\n"]},"metadata":{},"sourceType":"module"}