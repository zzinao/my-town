{"ast":null,"code":"import _objectSpread from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";//PostList.js\nimport React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import Post from'../components/Post';import{Grid}from'../elements/index';import{actionCreators as postActions}from'../redux/modules/post';import{jsx as _jsx}from\"react/jsx-runtime\";var PostList=function PostList(props){var dispatch=useDispatch();var post_list=useSelector(function(state){return state.post.list;});var user_info=useSelector(function(state){return state.user.user;});var is_loading=useSelector(function(state){return state.post.is_loading;});console.log(user_info);console.log(post_list);console.log(is_loading);var history=props.history;React.useEffect(function(){if(post_list.length<2){dispatch(postActions.getPostFB());}},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:post_list.map(function(post,idx){//로그인 했을 때만 체크하기 위해 optional chaining(user?.uid)사용\nif(post.user_info.user_id===(user_info===null||user_info===void 0?void 0:user_info.uid)){return/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Post,_objectSpread(_objectSpread({},post),{},{is_me:true}))},post.id);}else{return/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Post,_objectSpread({},post))},post.id);}})});};export default PostList;","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/pages/PostList.js"],"names":["React","useEffect","useSelector","useDispatch","Post","Grid","actionCreators","postActions","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","console","log","history","length","getPostFB","map","idx","user_id","uid","id"],"mappings":"2KAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,cAAc,GAAIC,CAAAA,WAA3B,KAA8C,uBAA9C,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,SAAS,CAAGT,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWC,IAAtB,EAAD,CAA7B,CACA,GAAMC,CAAAA,SAAS,CAAGb,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACI,IAAN,CAAWA,IAAtB,EAAD,CAA7B,CACA,GAAMC,CAAAA,UAAU,CAAGf,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWI,UAAtB,EAAD,CAA9B,CACAC,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EACAG,OAAO,CAACC,GAAR,CAAYR,SAAZ,EACAO,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEA,GAAQG,CAAAA,OAAR,CAAoBX,KAApB,CAAQW,OAAR,CAEApB,KAAK,CAACC,SAAN,CAAgB,UAAM,CACpB,GAAIU,SAAS,CAACU,MAAV,CAAmB,CAAvB,CAA0B,CACxBX,QAAQ,CAACH,WAAW,CAACe,SAAZ,EAAD,CAAR,CACD,CACF,CAJD,CAIG,EAJH,EAMA,mBACE,KAAC,KAAD,CAAO,QAAP,WACGX,SAAS,CAACY,GAAV,CAAc,SAACV,IAAD,CAAOW,GAAP,CAAe,CAC5B;AACA,GAAIX,IAAI,CAACE,SAAL,CAAeU,OAAf,IAA2BV,SAA3B,SAA2BA,SAA3B,iBAA2BA,SAAS,CAAEW,GAAtC,CAAJ,CAA+C,CAC7C,mBACE,KAAC,IAAD,wBACE,KAAC,IAAD,gCAAUb,IAAV,MAAgB,KAAK,KAArB,GADF,EAAWA,IAAI,CAACc,EAAhB,CADF,CAKD,CAND,IAMO,CACL,mBACE,KAAC,IAAD,wBACE,KAAC,IAAD,kBAAUd,IAAV,EADF,EAAWA,IAAI,CAACc,EAAhB,CADF,CAKD,CACF,CAfA,CADH,EADF,CAoBD,CArCD,CAuCA,cAAenB,CAAAA,QAAf","sourcesContent":["//PostList.js\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Post from '../components/Post'\nimport { Grid } from '../elements/index'\nimport { actionCreators as postActions } from '../redux/modules/post'\n\nconst PostList = (props) => {\n  const dispatch = useDispatch()\n  const post_list = useSelector((state) => state.post.list)\n  const user_info = useSelector((state) => state.user.user)\n  const is_loading = useSelector((state) => state.post.is_loading)\n  console.log(user_info)\n  console.log(post_list)\n  console.log(is_loading)\n\n  const { history } = props\n\n  React.useEffect(() => {\n    if (post_list.length < 2) {\n      dispatch(postActions.getPostFB())\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      {post_list.map((post, idx) => {\n        //로그인 했을 때만 체크하기 위해 optional chaining(user?.uid)사용\n        if (post.user_info.user_id === user_info?.uid) {\n          return (\n            <Grid key={post.id}>\n              <Post {...post} is_me />\n            </Grid>\n          )\n        } else {\n          return (\n            <Grid key={post.id}>\n              <Post {...post} />\n            </Grid>\n          )\n        }\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default PostList\n"]},"metadata":{},"sourceType":"module"}