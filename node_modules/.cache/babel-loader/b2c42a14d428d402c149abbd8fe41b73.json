{"ast":null,"code":"var _jsxFileName = \"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/src/pages/Notification.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Text, Image } from '../elements';\nimport Card from '../components/Card';\nimport { realtime } from '../shared/firebase';\nimport { useSelector } from 'react-redux';\nimport { ref, get, update } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = props => {\n  _s();\n\n  const user = useSelector(state => state.user.user);\n  const [noti, setNoti] = React.useState([]);\n  React.useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    const notiDB = ref(realtime, `noti/${user.uid}/list`);\n    get(notiDB).then(snapshot => {\n      if (snapshot.exists()) {\n        let _data = snapshot.val();\n\n        let _noti_list = Object.keys(_data).reverse().map(n => {\n          return _data[n];\n        });\n\n        setNoti(_noti_list);\n      }\n    }, [user]);\n    return () => {\n      const notiDB = ref(realtime, `noti/${user.user_id}`);\n      update(notiDB, {\n        list: []\n      });\n    };\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      bg: \"#EFF6FF\",\n      children: noti.map((n, idx) => {\n        return /*#__PURE__*/_jsxDEV(Card, { ...n\n        }, `noti_${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notification, \"asXmMMSrj15/oOqIdjQWTJgh71k=\", false, function () {\n  return [useSelector];\n});\n\n_c = Notification;\nexport default Notification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/pages/Notification.js"],"names":["React","Grid","Text","Image","Card","realtime","useSelector","ref","get","update","Notification","props","user","state","noti","setNoti","useState","useEffect","notiDB","uid","then","snapshot","exists","_data","val","_noti_list","Object","keys","reverse","map","n","user_id","list","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,aAAlC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,mBAAjC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;AAEAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACL,IAAL,EAAW;AACT;AACD;;AACD,UAAMM,MAAM,GAAGX,GAAG,CAACF,QAAD,EAAY,QAAOO,IAAI,CAACO,GAAI,OAA5B,CAAlB;AAEAX,IAAAA,GAAG,CAACU,MAAD,CAAH,CAAYE,IAAZ,CACGC,QAAD,IAAc;AACZ,UAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrB,YAAIC,KAAK,GAAGF,QAAQ,CAACG,GAAT,EAAZ;;AACA,YAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EACdK,OADc,GAEdC,GAFc,CAETC,CAAD,IAAO;AACV,iBAAOP,KAAK,CAACO,CAAD,CAAZ;AACD,SAJc,CAAjB;;AAKAf,QAAAA,OAAO,CAACU,UAAD,CAAP;AACD;AACF,KAXH,EAYE,CAACb,IAAD,CAZF;AAeA,WAAO,MAAM;AACX,YAAMM,MAAM,GAAGX,GAAG,CAACF,QAAD,EAAY,QAAOO,IAAI,CAACmB,OAAQ,EAAhC,CAAlB;AACAtB,MAAAA,MAAM,CAACS,MAAD,EAAS;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAT,CAAN;AACD,KAHD;AAID,GAzBD,EAyBG,CAACpB,IAAD,CAzBH;AA2BA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAA,gBACGE,IAAI,CAACe,GAAL,CAAS,CAACC,CAAD,EAAIG,GAAJ,KAAY;AACpB,4BAAO,QAAC,IAAD,OAA8BH;AAA9B,WAAY,QAAOG,GAAI,EAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxCD;;GAAMvB,Y;UACSJ,W;;;KADTI,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { Grid, Text, Image } from '../elements'\nimport Card from '../components/Card'\nimport { realtime } from '../shared/firebase'\nimport { useSelector } from 'react-redux'\nimport { ref, get, update } from 'firebase/database'\n\nconst Notification = (props) => {\n  const user = useSelector((state) => state.user.user)\n  const [noti, setNoti] = React.useState([])\n\n  React.useEffect(() => {\n    if (!user) {\n      return\n    }\n    const notiDB = ref(realtime, `noti/${user.uid}/list`)\n\n    get(notiDB).then(\n      (snapshot) => {\n        if (snapshot.exists()) {\n          let _data = snapshot.val()\n          let _noti_list = Object.keys(_data)\n            .reverse()\n            .map((n) => {\n              return _data[n]\n            })\n          setNoti(_noti_list)\n        }\n      },\n      [user],\n    )\n\n    return () => {\n      const notiDB = ref(realtime, `noti/${user.user_id}`)\n      update(notiDB, { list: [] })\n    }\n  }, [user])\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" bg=\"#EFF6FF\">\n        {noti.map((n, idx) => {\n          return <Card key={`noti_${idx}`} {...n} />\n        })}\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Notification\n"]},"metadata":{},"sourceType":"module"}