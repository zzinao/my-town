{"ast":null,"code":"import _toConsumableArray from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _handleActions;import _regeneratorRuntime from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/regenerator/index.js\";import{createAction,handleActions}from'redux-actions';import{produce}from'immer';import{doc,docs,getDoc,addDoc,getDocs,collection,query,orderBy,limit,updateDoc,startAt,deleteDoc}from'firebase/firestore';import{db}from'../../shared/firebase';import moment from'moment';import{getStorage,ref,uploadString,getDownloadURL}from'firebase/storage';import{actionCreators as imageActions}from'./image';import{add}from'lodash';var SET_POST='SET_POST';var ADD_POST='ADD_POST';var EDIT_POST='EDIT_POST';var LOADING='LOADING';var DELETE_POST='DELETE_POST';// export function loadPost(post) {\n//   return { type: SET_POST, post }\n// }\nvar setPost=createAction(SET_POST,function(post_list){return{post_list:post_list};});var addPost=createAction(ADD_POST,function(post){return{post:post};});var editPost=createAction(EDIT_POST,function(post_id,post){return{post_id:post_id,post:post};});var loading=createAction(LOADING,function(is_loading){return{is_loading:is_loading};});var deletePost=createAction(DELETE_POST,function(post_id){return{post_id:post_id};});var initialState={list:[],paging:{start:null,next:null,size:3},is_loading:false};var initialPost={// id: 0,\n// user_info: {\n//   user_name: 'mark',\n//   user_profile:\n//     'https://i.pinimg.com/564x/06/8c/4c/068c4c352f5ec31f676f9368f26143ec.jpg',\n// },\nimage_url:'https://i.pinimg.com/564x/06/8c/4c/068c4c352f5ec31f676f9368f26143ec.jpg',contents:'',comment_cnt:0,insert_dt:moment().format('YYYY-MM-dd hh:mm:ss')};//스토어 연결\nvar addPostFB=function addPostFB(){var contents=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState,_ref){var history,_user,user_info,_post,_image,storage,storageRef;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:history=_ref.history;_user=getState().user.user;user_info={user_name:_user.user_name,user_id:_user.uid,user_profile:_user.user_profile};_post=_objectSpread(_objectSpread({},initialPost),{},{contents:contents,insert_dt:moment().format('YYYY-MM-dd')});_image=getState().image.preview;storage=getStorage();storageRef=ref(storage,\"images/\".concat(user_info.user_id,\"_\").concat(new Date().getTime()));uploadString(storageRef,_image,'data_url').then(function(snapshot){getDownloadURL(snapshot.ref).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var post;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return addDoc(collection(db,'post'),_objectSpread(_objectSpread(_objectSpread({},user_info),_post),{},{image_url:url}));case 2:post=_objectSpread(_objectSpread({user_info:user_info},_post),{},{id:doc.id,image_url:url});dispatch(addPost(post));history.replace('/');dispatch(imageActions.setPreview(null));case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x4){return _ref3.apply(this,arguments);};}()).catch(function(err){window.alert('post 작성에 실패했다릐,,');console.log('post 작성에 실패했다릐,,',err);});}).catch(function(err){window.alert('앗! 이미지 업로드에 문제가 있다료');console.log('앗! 이미지 업로드에 문제가 있다료',err);});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();};export var getPostFB=function getPostFB(){var start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var post_data,postRef,q,post,post_list,paging;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(loading(true));_context3.next=3;return getDocs(collection(db,'post'));case 3:post_data=_context3.sent;postRef=collection(db,'post');// 시간 순 정렬 (왜 안돼,,,)\nq=start?query(postRef,orderBy('insert_dt','desc'),startAt(start),limit(size+1)):query(postRef,orderBy('insert_dt','desc'),limit(2));_context3.next=8;return getDocs(q);case 8:post=_context3.sent;post_list=[];paging={start:post.docs[0],next:post.docs.length===size+1?post.docs[post.docs.length-1]:null,size:size};post_data.forEach(function(doc){var _post=_objectSpread({id:doc.id},doc.data());// console.log(_post)\nvar post=Object.keys(_post).reduce(function(acc,cur){if(cur.indexOf('user_')!==-1){return _objectSpread(_objectSpread({},acc),{},{user_info:_objectSpread(_objectSpread({},acc.user_info),{},_defineProperty({},cur,_post[cur]))});}return _objectSpread(_objectSpread({},acc),{},_defineProperty({},cur,_post[cur]));},{id:doc.id,user_info:{}});// let post = {\n//   id: doc.id,\n//   user_info: {\n//     user_name: _post.user_name,\n//     user_profile: _post.user_profile,\n//     user_id: _post.user_id,\n//   },\n//   contents: _post.contents,\n//   image_url: _post.image_url,\n//   comment_cnt: _post.comment_cnt,\n//   insert_dt: _post.inser_dt,\n// }\npost_list.push(post);});dispatch(setPost(post_list,paging));// console.log(post_list)\n// })\ncase 13:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref4.apply(this,arguments);};}();};// export default function reducer(state = initialState, action = {}) {\n//   // state = {} : 디폴트값\n//   switch (action.type) {\n//     case 'SET_POST': {\n//       console.log(action.post)\n//       return {\n//         list: action.post,\n//       }\n//     }\n//     default:\n//       return state\n//   }\n// }\n//수정\nvar editPostFB=function editPostFB(){var post_id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var post=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState,_ref5){var history,_image,storage,post_idx,_post,postDB,_user,storageRef;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:history=_ref5.history;// if (!post_id) {\n//   console.log('게시물 정보가 없어요!')\n//   return\n// }\n_image=getState().image.preview;storage=getStorage();post_idx=getState().post.list.findIndex(function(p){return p.id===post_id;});_post=getState().post.list[post_idx];// const uid = getState().user.user.user_id\n// console.log(uid)\npostDB=collection(db,'post');console.log(postDB);if(!(_image===_post.image_url)){_context5.next=13;break;}_context5.next=10;return updateDoc(postDB,{post:post}).then(function(){dispatch(editPost(post_id,_objectSpread({},post)));history.replace('/');});case 10:return _context5.abrupt(\"return\");case 13:_user=getState().user.user;storageRef=ref(storage,\"images/\".concat(_user.uid,\"_\").concat(new Date().getTime()));uploadString(storageRef,_image,'data_url').then(function(snapshot){getDownloadURL(snapshot.ref).then(function(url){dispatch(imageActions.uploadImage(url));console.log(url);return url;}).then(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return updateDoc(postDB,{post:post}).then(function(){dispatch(editPost(post_id,_objectSpread(_objectSpread({},post),{},{image_url:url})));history.replace('/');});case 3:_context4.next=9;break;case 5:_context4.prev=5;_context4.t0=_context4[\"catch\"](0);window.alert('앗! 이미지 업로드에 문제가 있어요!');console.log('앗! 이미지 업로드에 문제가 있어요!',_context4.t0);case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,5]]);}));return function(_x9){return _ref7.apply(this,arguments);};}());});case 16:console.log(_post);case 17:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x6,_x7,_x8){return _ref6.apply(this,arguments);};}();};var getOnePostFB=function getOnePostFB(id){return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState,_ref8){var history,postDB;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:history=_ref8.history;_context6.next=3;return getDocs(collection(db,'post'));case 3:postDB=_context6.sent;postDB.forEach(function(doc){var _post=doc.data();if(!_post){return;}var post=Object.keys(_post).reduce(function(acc,cur){if(cur.indexOf('user_')!==-1){return _objectSpread(_objectSpread({},acc),{},{user_info:_objectSpread(_objectSpread({},acc.user_info),{},_defineProperty({},cur,_post[cur]))});}return _objectSpread(_objectSpread({},acc),{},_defineProperty({},cur,_post[cur]));},{id:_post.id,user_info:{}});dispatch(setPost([post]));});case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x10,_x11,_x12){return _ref9.apply(this,arguments);};}();};var deletePostFB=function deletePostFB(post_id){return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var docRef;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:docRef=doc(db,'post',post_id);_context7.next=3;return deleteDoc(docRef);case 3:alert('삭제합니다요~');dispatch(deletePost(post_id));case 5:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x13){return _ref10.apply(this,arguments);};}();};export default handleActions((_handleActions={},_defineProperty(_handleActions,SET_POST,function(state,action){return produce(state,function(draft){var _draft$list;(_draft$list=draft.list).push.apply(_draft$list,_toConsumableArray(action.payload.post_list));draft.ist=draft.list.reduce(function(acc,cur){if(acc.findIndex(function(a){return a.id===cur.id;})===-1){return[].concat(_toConsumableArray(acc),[cur]);}else{acc[acc.findIndex(function(a){return a.id===cur.id;})]=cur;return acc;}},[]);if(action.payload.paging){draft.paging=action.payload.paging;}draft.is_loading=false;});}),_defineProperty(_handleActions,ADD_POST,function(state,action){return produce(state,function(draft){draft.list.unshift(action.payload.post);});}),_defineProperty(_handleActions,EDIT_POST,function(state,action){return produce(state,function(draft){var idx=draft.list.findIndex(function(p){return p.id=action.payload.post;});draft.list[idx]=_objectSpread(_objectSpread({},draft.list[idx]),action.payload.post);});}),_defineProperty(_handleActions,LOADING,function(state,action){return produce(state,function(draft){draft.is_loading=action.payload.is_loading;});}),_defineProperty(_handleActions,DELETE_POST,function(state,action){return produce(state,function(draft){draft.list=draft.list.filter(function(l){return l.id!==action.payload.post_id;});});}),_handleActions),initialState);var actionCreators={setPost:setPost,addPost:addPost,getPostFB:getPostFB,addPostFB:addPostFB,editPostFB:editPostFB,getOnePostFB:getOnePostFB,deletePostFB:deletePostFB};export{actionCreators};","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/redux/modules/post.js"],"names":["createAction","handleActions","produce","doc","docs","getDoc","addDoc","getDocs","collection","query","orderBy","limit","updateDoc","startAt","deleteDoc","db","moment","getStorage","ref","uploadString","getDownloadURL","actionCreators","imageActions","add","SET_POST","ADD_POST","EDIT_POST","LOADING","DELETE_POST","setPost","post_list","addPost","post","editPost","post_id","loading","is_loading","deletePost","initialState","list","paging","start","next","size","initialPost","image_url","contents","comment_cnt","insert_dt","format","addPostFB","dispatch","getState","history","_user","user","user_info","user_name","user_id","uid","user_profile","_post","_image","image","preview","storage","storageRef","Date","getTime","then","snapshot","url","id","replace","setPreview","catch","err","window","alert","console","log","getPostFB","post_data","postRef","q","length","forEach","data","Object","keys","reduce","acc","cur","indexOf","push","editPostFB","post_idx","findIndex","p","postDB","uploadImage","getOnePostFB","deletePostFB","docRef","state","action","draft","payload","ist","a","unshift","idx","filter","l"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions'\nimport { produce } from 'immer'\nimport {\n  doc,\n  docs,\n  getDoc,\n  addDoc,\n  getDocs,\n  collection,\n  query,\n  orderBy,\n  limit,\n  updateDoc,\n  startAt,\n  deleteDoc,\n} from 'firebase/firestore'\nimport { db } from '../../shared/firebase'\nimport moment from 'moment'\nimport { getStorage, ref, uploadString, getDownloadURL } from 'firebase/storage'\nimport { actionCreators as imageActions } from './image'\nimport { add } from 'lodash'\n\nconst SET_POST = 'SET_POST'\nconst ADD_POST = 'ADD_POST'\nconst EDIT_POST = 'EDIT_POST'\nconst LOADING = 'LOADING'\nconst DELETE_POST = 'DELETE_POST'\n\n// export function loadPost(post) {\n//   return { type: SET_POST, post }\n// }\n\nconst setPost = createAction(SET_POST, (post_list) => ({ post_list }))\nconst addPost = createAction(ADD_POST, (post) => ({ post }))\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\n  post_id,\n  post,\n}))\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }))\n\nconst deletePost = createAction(DELETE_POST, (post_id) => ({ post_id }))\n\nconst initialState = {\n  list: [],\n  paging: { start: null, next: null, size: 3 },\n  is_loading: false,\n}\n\nconst initialPost = {\n  // id: 0,\n  // user_info: {\n  //   user_name: 'mark',\n  //   user_profile:\n  //     'https://i.pinimg.com/564x/06/8c/4c/068c4c352f5ec31f676f9368f26143ec.jpg',\n  // },\n  image_url:\n    'https://i.pinimg.com/564x/06/8c/4c/068c4c352f5ec31f676f9368f26143ec.jpg',\n  contents: '',\n  comment_cnt: 0,\n  insert_dt: moment().format('YYYY-MM-dd hh:mm:ss'),\n}\n\n//스토어 연결\nconst addPostFB = (contents = '') => {\n  return async function (dispatch, getState, { history }) {\n    const _user = getState().user.user\n    const user_info = {\n      user_name: _user.user_name,\n      user_id: _user.uid,\n      user_profile: _user.user_profile,\n    }\n    const _post = {\n      ...initialPost,\n      contents: contents,\n      insert_dt: moment().format('YYYY-MM-dd'),\n    }\n\n    const _image = getState().image.preview\n\n    const storage = getStorage()\n    const storageRef = ref(\n      storage,\n      `images/${user_info.user_id}_${new Date().getTime()}`,\n    )\n\n    uploadString(storageRef, _image, 'data_url')\n      .then((snapshot) => {\n        getDownloadURL(snapshot.ref)\n          .then(async (url) => {\n            await addDoc(collection(db, 'post'), {\n              ...user_info,\n              ..._post,\n              image_url: url,\n            })\n            let post = { user_info, ..._post, id: doc.id, image_url: url }\n            dispatch(addPost(post))\n            history.replace('/')\n\n            dispatch(imageActions.setPreview(null))\n          })\n          .catch((err) => {\n            window.alert('post 작성에 실패했다릐,,')\n            console.log('post 작성에 실패했다릐,,', err)\n          })\n      })\n      .catch((err) => {\n        window.alert('앗! 이미지 업로드에 문제가 있다료')\n        console.log('앗! 이미지 업로드에 문제가 있다료', err)\n      })\n  }\n}\n\nexport const getPostFB = (start = null, size = 3) => {\n  return async function (dispatch) {\n    dispatch(loading(true))\n    const post_data = await getDocs(collection(db, 'post'))\n    const postRef = collection(db, 'post')\n    // 시간 순 정렬 (왜 안돼,,,)\n    const q = start\n      ? query(\n          postRef,\n          orderBy('insert_dt', 'desc'),\n          startAt(start),\n          limit(size + 1),\n        )\n      : query(postRef, orderBy('insert_dt', 'desc'), limit(2))\n    const post = await getDocs(q)\n    let post_list = []\n    let paging = {\n      start: post.docs[0],\n      next:\n        post.docs.length === size + 1 ? post.docs[post.docs.length - 1] : null,\n      size: size,\n    }\n    post_data.forEach((doc) => {\n      let _post = { id: doc.id, ...doc.data() }\n      // console.log(_post)\n      let post = Object.keys(_post).reduce(\n        (acc, cur) => {\n          if (cur.indexOf('user_') !== -1) {\n            return {\n              ...acc,\n              user_info: { ...acc.user_info, [cur]: _post[cur] },\n            }\n          }\n          return { ...acc, [cur]: _post[cur] }\n        },\n        { id: doc.id, user_info: {} },\n      )\n      // let post = {\n      //   id: doc.id,\n      //   user_info: {\n      //     user_name: _post.user_name,\n      //     user_profile: _post.user_profile,\n      //     user_id: _post.user_id,\n      //   },\n      //   contents: _post.contents,\n      //   image_url: _post.image_url,\n      //   comment_cnt: _post.comment_cnt,\n      //   insert_dt: _post.inser_dt,\n      // }\n      post_list.push(post)\n    })\n    dispatch(setPost(post_list, paging))\n    // console.log(post_list)\n    // })\n  }\n}\n// export default function reducer(state = initialState, action = {}) {\n//   // state = {} : 디폴트값\n//   switch (action.type) {\n//     case 'SET_POST': {\n//       console.log(action.post)\n//       return {\n//         list: action.post,\n//       }\n//     }\n\n//     default:\n//       return state\n//   }\n// }\n\n//수정\nconst editPostFB = (post_id = null, post = {}) => {\n  return async function (dispatch, getState, { history }) {\n    // if (!post_id) {\n    //   console.log('게시물 정보가 없어요!')\n    //   return\n    // }\n    const _image = getState().image.preview\n    const storage = getStorage()\n    const post_idx = getState().post.list.findIndex((p) => p.id === post_id)\n    const _post = getState().post.list[post_idx]\n\n    // const uid = getState().user.user.user_id\n    // console.log(uid)\n    const postDB = collection(db, 'post')\n    console.log(postDB)\n\n    if (_image === _post.image_url) {\n      await updateDoc(postDB, { post }).then(() => {\n        dispatch(editPost(post_id, { ...post }))\n        history.replace('/')\n      })\n\n      return\n    } else {\n      const _user = getState().user.user\n\n      const storageRef = ref(\n        storage,\n        `images/${_user.uid}_${new Date().getTime()}`,\n      )\n      uploadString(storageRef, _image, 'data_url').then((snapshot) => {\n        getDownloadURL(snapshot.ref)\n          .then((url) => {\n            dispatch(imageActions.uploadImage(url))\n            console.log(url)\n            return url\n          })\n          .then(async (url) => {\n            try {\n              await updateDoc(postDB, { post }).then(() => {\n                dispatch(editPost(post_id, { ...post, image_url: url }))\n                history.replace('/')\n              })\n            } catch (err) {\n              window.alert('앗! 이미지 업로드에 문제가 있어요!')\n              console.log('앗! 이미지 업로드에 문제가 있어요!', err)\n            }\n          })\n      })\n    }\n\n    console.log(_post)\n  }\n}\n\nconst getOnePostFB = (id) => {\n  return async function (dispatch, getState, { history }) {\n    const postDB = await getDocs(collection(db, 'post'))\n    postDB.forEach((doc) => {\n      let _post = doc.data()\n      if (!_post) {\n        return\n      }\n      let post = Object.keys(_post).reduce(\n        (acc, cur) => {\n          if (cur.indexOf('user_') !== -1) {\n            return {\n              ...acc,\n              user_info: { ...acc.user_info, [cur]: _post[cur] },\n            }\n          }\n          return { ...acc, [cur]: _post[cur] }\n        },\n        { id: _post.id, user_info: {} },\n      )\n      dispatch(setPost([post]))\n    })\n  }\n}\n\nconst deletePostFB = (post_id) => {\n  return async function (dispatch) {\n    const docRef = doc(db, 'post', post_id)\n    await deleteDoc(docRef)\n    alert('삭제합니다요~')\n    dispatch(deletePost(post_id))\n  }\n}\n\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(...action.payload.post_list)\n\n        draft.ist = draft.list.reduce((acc, cur) => {\n          if (acc.findIndex((a) => a.id === cur.id) === -1) {\n            return [...acc, cur]\n          } else {\n            acc[acc.findIndex((a) => a.id === cur.id)] = cur\n            return acc\n          }\n        }, [])\n        if (action.payload.paging) {\n          draft.paging = action.payload.paging\n        }\n\n        draft.is_loading = false\n      }),\n\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.unshift(action.payload.post)\n      }),\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        let idx = draft.list.findIndex((p) => (p.id = action.payload.post))\n        draft.list[idx] = { ...draft.list[idx], ...action.payload.post }\n      }),\n    [LOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading\n      }),\n    [DELETE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = draft.list.filter((l) => l.id !== action.payload.post_id)\n      }),\n  },\n  initialState,\n)\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostFB,\n  addPostFB,\n  editPostFB,\n  getOnePostFB,\n  deletePostFB,\n}\n\nexport { actionCreators }\n"]},"metadata":{},"sourceType":"module"}