{"ast":null,"code":"import _slicedToArray from\"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//components/NotiBadge.js\nimport React from'react';import{Notifications}from'@material-ui/icons';import{Badge}from'@material-ui/core';import{realtime}from'../shared/firebase';import{useSelector}from'react-redux';import{onValue,ref,update}from'firebase/database';import{jsx as _jsx}from\"react/jsx-runtime\";var NotiBadge=function NotiBadge(props){var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),is_read=_React$useState2[0],setIsRead=_React$useState2[1];var user_id=useSelector(function(state){return state.user.user.uid;});var notiDB=ref(realtime,\"noti/\".concat(user_id));var notiCheck=function notiCheck(){update(notiDB,{read:true});props._onClick();};React.useEffect(function(){onValue(notiDB,function(v){if(v.val()===null){update(notiDB,{read:true});}else{setIsRead(Boolean(v.val().read));}});},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Badge,{invisible:is_read,color:\"secondary\",onClick:notiCheck,variant:\"dot\",children:/*#__PURE__*/_jsx(Notifications,{})})});};NotiBadge.defaultProps={_onClick:function _onClick(){}};export default NotiBadge;","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/components/NotiBadge.js"],"names":["React","Notifications","Badge","realtime","useSelector","onValue","ref","update","NotiBadge","props","useState","is_read","setIsRead","user_id","state","user","uid","notiDB","notiCheck","read","_onClick","useEffect","v","val","Boolean","defaultProps"],"mappings":"4KAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,aAAT,KAA8B,oBAA9B,CACA,OAASC,KAAT,KAAsB,mBAAtB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,OAAT,CAAkBC,GAAlB,CAAuBC,MAAvB,KAAqC,mBAArC,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,oBAA6BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAA7B,oDAAOC,OAAP,qBAAgBC,SAAhB,qBACA,GAAMC,CAAAA,OAAO,CAAGT,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBC,GAA3B,EAAD,CAA3B,CAEA,GAAMC,CAAAA,MAAM,CAAGX,GAAG,CAACH,QAAD,gBAAmBU,OAAnB,EAAlB,CAEA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBX,MAAM,CAACU,MAAD,CAAS,CAAEE,IAAI,CAAE,IAAR,CAAT,CAAN,CACAV,KAAK,CAACW,QAAN,GACD,CAHD,CAKApB,KAAK,CAACqB,SAAN,CAAgB,UAAM,CACpBhB,OAAO,CAACY,MAAD,CAAS,SAACK,CAAD,CAAO,CACrB,GAAIA,CAAC,CAACC,GAAF,KAAY,IAAhB,CAAsB,CACpBhB,MAAM,CAACU,MAAD,CAAS,CAAEE,IAAI,CAAE,IAAR,CAAT,CAAN,CACD,CAFD,IAEO,CACLP,SAAS,CAACY,OAAO,CAACF,CAAC,CAACC,GAAF,GAAQJ,IAAT,CAAR,CAAT,CACD,CACF,CANM,CAAP,CAOD,CARD,CAQG,EARH,EAUA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,KAAC,KAAD,EACE,SAAS,CAAER,OADb,CAEE,KAAK,CAAC,WAFR,CAGE,OAAO,CAAEO,SAHX,CAIE,OAAO,CAAC,KAJV,uBAME,KAAC,aAAD,IANF,EADF,EADF,CAYD,CAjCD,CAmCAV,SAAS,CAACiB,YAAV,CAAyB,CACvBL,QAAQ,CAAE,mBAAM,CAAE,CADK,CAAzB,CAIA,cAAeZ,CAAAA,SAAf","sourcesContent":["//components/NotiBadge.js\nimport React from 'react'\n\nimport { Notifications } from '@material-ui/icons'\nimport { Badge } from '@material-ui/core'\nimport { realtime } from '../shared/firebase'\nimport { useSelector } from 'react-redux'\nimport { onValue, ref, update } from 'firebase/database'\n\nconst NotiBadge = (props) => {\n  const [is_read, setIsRead] = React.useState(true)\n  const user_id = useSelector((state) => state.user.user.uid)\n\n  const notiDB = ref(realtime, `noti/${user_id}`)\n\n  const notiCheck = () => {\n    update(notiDB, { read: true })\n    props._onClick()\n  }\n\n  React.useEffect(() => {\n    onValue(notiDB, (v) => {\n      if (v.val() === null) {\n        update(notiDB, { read: true })\n      } else {\n        setIsRead(Boolean(v.val().read))\n      }\n    })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Badge\n        invisible={is_read}\n        color=\"secondary\"\n        onClick={notiCheck}\n        variant=\"dot\"\n      >\n        <Notifications />\n      </Badge>\n    </React.Fragment>\n  )\n}\n\nNotiBadge.defaultProps = {\n  _onClick: () => {},\n}\n\nexport default NotiBadge\n"]},"metadata":{},"sourceType":"module"}