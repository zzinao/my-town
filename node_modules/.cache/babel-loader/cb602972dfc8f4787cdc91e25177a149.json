{"ast":null,"code":"var _jsxFileName = \"/Users/jina/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u116299/sparta-react02/community/my_town-/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Grid, Text, Input, Button } from '../elements/index';\nimport { getCookie, setCookie, deleteCookie } from '../shared/Cookies';\nimport { useDispatch } from 'react-redux';\nimport { actionCreators as userActions } from '../redux/modules/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [id, setId] = React.useState('');\n  const [pwd, setPwd] = React.useState(''); // console.log(getCookie('user_id'))\n\n  const login = () => {\n    if (id === '' || pwd === '') {\n      window.alert('빈칸을 채워주셔요~');\n      return;\n    }\n\n    dispatch(userActions.loginFB(id, pwd));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        type: \"heading\",\n        size: \"32px\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          padding: \"12px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            label: \"id\",\n            value: id,\n            placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            _onChange: e => {\n              setId(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            label: \"pw\",\n            value: pwd,\n            _onChange: e => {\n              setPwd(e.target.value);\n            },\n            type: \"password\",\n            placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\uB85C\\uADF8\\uC778\",\n          _onClick: login,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"G1SDSINezC39aAO3oJgxXxU3Ank=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nconst Container = styled.div`\n  text-align: center;\n`;\n_c2 = Container;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/jina/Desktop/항해99/sparta-react02/community/my_town-/src/pages/Login.js"],"names":["React","styled","Grid","Text","Input","Button","getCookie","setCookie","deleteCookie","useDispatch","actionCreators","userActions","Login","props","dispatch","id","setId","useState","pwd","setPwd","login","window","alert","loginFB","e","target","value","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,mBAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAchB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAApB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAAtB,CAJuB,CAMvB;;AAEA,QAAMG,KAAK,GAAG,MAAM;AAClB,QAAIL,EAAE,KAAK,EAAP,IAAaG,GAAG,KAAK,EAAzB,EAA6B;AAC3BG,MAAAA,MAAM,CAACC,KAAP,CAAa,YAAb;AACA;AACD;;AACDR,IAAAA,QAAQ,CAACH,WAAW,CAACY,OAAZ,CAAoBR,EAApB,EAAwBG,GAAxB,CAAD,CAAR;AACD,GAND;;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,UAAd;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,KAAK,EAAC,IADR;AAEE,YAAA,KAAK,EAAEH,EAFT;AAGE,YAAA,WAAW,EAAC,+DAHd;AAIE,YAAA,SAAS,EAAGS,CAAD,IAAO;AAChBR,cAAAA,KAAK,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,IAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,KAAK,EAAC,IADR;AAEE,YAAA,KAAK,EAAER,GAFT;AAGE,YAAA,SAAS,EAAGM,CAAD,IAAO;AAChBL,cAAAA,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,aALH;AAME,YAAA,IAAI,EAAC,UANP;AAOE,YAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAwBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,oBAAb;AAAmB,UAAA,QAAQ,EAAEN,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArDD;;GAAMR,K;UACaH,W;;;KADbG,K;AAuDN,MAAMe,SAAS,GAAG1B,MAAM,CAAC2B,GAAI;AAC7B;AACA,CAFA;MAAMD,S;AAIN,eAAef,KAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Grid, Text, Input, Button } from '../elements/index'\nimport { getCookie, setCookie, deleteCookie } from '../shared/Cookies'\nimport { useDispatch } from 'react-redux'\nimport { actionCreators as userActions } from '../redux/modules/User'\n\nconst Login = (props) => {\n  const dispatch = useDispatch()\n\n  const [id, setId] = React.useState('')\n  const [pwd, setPwd] = React.useState('')\n\n  // console.log(getCookie('user_id'))\n\n  const login = () => {\n    if (id === '' || pwd === '') {\n      window.alert('빈칸을 채워주셔요~')\n      return\n    }\n    dispatch(userActions.loginFB(id, pwd))\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text type=\"heading\" size=\"32px\">\n          로그인\n        </Text>\n        <Container>\n          <Grid padding=\"12px 0 0\">\n            <Input\n              label=\"id\"\n              value={id}\n              placeholder=\"아이디를 입력해주세요\"\n              _onChange={(e) => {\n                setId(e.target.value)\n              }}\n            />\n          </Grid>\n\n          <Grid>\n            <Input\n              label=\"pw\"\n              value={pwd}\n              _onChange={(e) => {\n                setPwd(e.target.value)\n              }}\n              type=\"password\"\n              placeholder=\"패스워드를 입력해주세요\"\n            />\n          </Grid>\n\n          <Button text=\"로그인\" _onClick={login}>\n            로그인\n          </Button>\n        </Container>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}